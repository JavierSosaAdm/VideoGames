{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javie\\\\Desktop\\\\PI-Videogames-main\\\\client\\\\src\\\\Views\\\\Home\\\\home.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { getGames, getGenres } from '../../Redux/Actions';\nimport Cards from '../../Components/Cards/cards';\nimport NavBar from '../../Components/NavBar/nav';\nimport Filter from '../../Components/Filter/Filter';\nimport Paginado from '../../Components/Paginado/paginado';\nimport style from './home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const dispatch = useDispatch();\n  const allGames = useSelector(state => state.allGames);\n  const [totalGames, setTotalGames] = useState([]);\n  const [filtros, setFiltros] = useState({\n    orden: '',\n    origen: ''\n  });\n  const [filterGames, setFilterGames] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [items] = useState(15);\n  const max = Math.ceil(allGames.length / items);\n  useEffect(() => {\n    setTotalGames(allGames);\n    dispatch(getGames());\n  }, []);\n  useEffect(() => {\n    dispatch(getGenres());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: style.home,\n      children: \"HOME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Galer\\xEDa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      className: style.filters,\n      allGames: allGames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paginado, {\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage,\n      max: max\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), allGames === null || allGames === void 0 ? void 0 : allGames.slice((currentPage - 1) * items, (currentPage - 1) * items + items).map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        game: game\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, game.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Cards, {\n      allGames: allGames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"mvBQV4GWp26cMDFjtm/rCbYHPZM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\n;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","useState","getGames","getGenres","Cards","NavBar","Filter","Paginado","style","jsxDEV","_jsxDEV","Home","_s","dispatch","allGames","state","totalGames","setTotalGames","filtros","setFiltros","orden","origen","filterGames","setFilterGames","currentPage","setCurrentPage","items","max","Math","ceil","length","children","className","home","fileName","_jsxFileName","lineNumber","columnNumber","filters","slice","map","game","Card","id","_c","$RefreshReg$"],"sources":["C:/Users/javie/Desktop/PI-Videogames-main/client/src/Views/Home/home.jsx"],"sourcesContent":["\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { getGames, getGenres } from '../../Redux/Actions'\r\nimport Cards from '../../Components/Cards/cards';\r\nimport NavBar from '../../Components/NavBar/nav';\r\nimport Filter from '../../Components/Filter/Filter';\r\nimport Paginado from '../../Components/Paginado/paginado'\r\nimport style from './home.module.css';\r\n\r\n\r\n\r\nfunction Home () {\r\n    const dispatch = useDispatch();\r\n    const allGames = useSelector((state) => state.allGames); \r\n    const [totalGames, setTotalGames] = useState([])\r\n    const [filtros, setFiltros] = useState({\r\n        orden: '',\r\n        origen: ''\r\n    })\r\n   const [filterGames, setFilterGames] = useState({});\r\n   const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const [items] = useState(15)\r\n\r\n    const max = Math.ceil(allGames.length/items);\r\n\r\n    useEffect(() => { \r\n        setTotalGames(allGames)\r\n        dispatch(getGames()); \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(getGenres());\r\n    }, [])\r\n\r\n    \r\n\r\n    return (\r\n        <div >\r\n            <h1 className={style.home}>HOME</h1>\r\n\r\n            <NavBar/>\r\n            <h2>Galer√≠a</h2>\r\n            <Filter className={style.filters} allGames={allGames}/>\r\n            <Paginado currentPage={currentPage} setCurrentPage={setCurrentPage} max={max} />\r\n            {allGames?.slice((currentPage -1) * items, (currentPage -1) * items + items).map((game) => (\r\n                <li key={game.id}>\r\n                    <Card game={game}/>\r\n                </li>\r\n            ))}\r\n            <Cards allGames={allGames}/>     \r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}