{"ast":null,"code":"import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { filter } from '../../Redux/Actions';\nimport style from './filter.module.css';\nconst Filter = ({\n  allGames\n}) => {\n  console.log(allGames);\n};\n//     const allGenres = useSelector((state) => state.allGenres);\n\n//     const dispatch = useDispatch();\n\n//     const [filtrado, setFiltrado] = useState(allGames);\n\n//      const handleFilter = (event) => {\n//          const gamefilter = allGames.filter((game) => {\n//             console.log(allGames);\n//                  game.genres.map ((genre) => {\n//                      return genre.name ===  event.target.value\n//                  })\n\n//              });\n\n//              setFiltrado(gamefilter);\n//              return filtrado;\n//      }\n\n//      const hancleOrder = () => {\n//             let filterGames = [...allGames];\n\n//              if (filtrado.orden === 'A') {\n//                  filterGames.sort((a, b) => a.name.localeCompare(b.name))\n//              }\n//              if (filtrado.orden === 'D') {\n//                  filterGames.sort((a, b) => b.name.localeCompare(a.name))\n//              }\n\n//              return setFiltrado(filterGames)\n//      }\n\n//     // const handleFilterChange = (event) => {\n//     //     dispatch(filter(event.target.value))\n//     // };  \n\n//     return (\n//         <div className={style.div}>\n//             <label className={style.label} htmlFor=\"genres\">Filtrar por Género: </label>\n//                     <select onChange={handleFilter}>\n//                     <option>\n//                         Select\n//                     </option>\n//                     {allGenres?.map((gen) => {\n//                         return (\n//                          <option value= {gen.id} key={gen.name}>\n//                              {gen.name}\n//                          </option>\n//                      )\n//                  })}\n//                  </select>\n//                  <label className={style.label} htmlFor=\"orden\">Filtrar por Orden: </label>\n//                 <select >\n//                 <option>Select</option>\n//                 <option value=\"nombre\" onClick={hancleOrder}>Nombre</option>\n//                 <option value=\"rating\">Rating</option>\n\n//                 </select>\n//         </div>\n//     )\n// };\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["useSelector","useDispatch","useState","filter","style","Filter","allGames","console","log","_c","$RefreshReg$"],"sources":["C:/Users/javie/Desktop/PI-Videogames-main/client/src/Components/Filter/Filter.jsx"],"sourcesContent":["import { useSelector, useDispatch} from 'react-redux'; \r\nimport { useState } from 'react';\r\nimport { filter } from '../../Redux/Actions';\r\nimport style from './filter.module.css';\r\nconst Filter = ({allGames}) => {\r\n    console.log(allGames);\r\n};\r\n//     const allGenres = useSelector((state) => state.allGenres);\r\n   \r\n//     const dispatch = useDispatch();\r\n    \r\n//     const [filtrado, setFiltrado] = useState(allGames);\r\n    \r\n    \r\n//      const handleFilter = (event) => {\r\n//          const gamefilter = allGames.filter((game) => {\r\n//             console.log(allGames);\r\n//                  game.genres.map ((genre) => {\r\n//                      return genre.name ===  event.target.value\r\n//                  })\r\n                 \r\n//              });\r\n            \r\n//              setFiltrado(gamefilter);\r\n//              return filtrado;\r\n//      }\r\n\r\n//      const hancleOrder = () => {\r\n//             let filterGames = [...allGames];\r\n\r\n//              if (filtrado.orden === 'A') {\r\n//                  filterGames.sort((a, b) => a.name.localeCompare(b.name))\r\n//              }\r\n//              if (filtrado.orden === 'D') {\r\n//                  filterGames.sort((a, b) => b.name.localeCompare(a.name))\r\n//              }\r\n             \r\n//              return setFiltrado(filterGames)\r\n//      }\r\n        \r\n//     // const handleFilterChange = (event) => {\r\n//     //     dispatch(filter(event.target.value))\r\n//     // };  \r\n    \r\n    \r\n//     return (\r\n//         <div className={style.div}>\r\n//             <label className={style.label} htmlFor=\"genres\">Filtrar por Género: </label>\r\n//                     <select onChange={handleFilter}>\r\n//                     <option>\r\n//                         Select\r\n//                     </option>\r\n//                     {allGenres?.map((gen) => {\r\n//                         return (\r\n//                          <option value= {gen.id} key={gen.name}>\r\n//                              {gen.name}\r\n//                          </option>\r\n//                      )\r\n//                  })}\r\n//                  </select>\r\n//                  <label className={style.label} htmlFor=\"orden\">Filtrar por Orden: </label>\r\n//                 <select >\r\n//                 <option>Select</option>\r\n//                 <option value=\"nombre\" onClick={hancleOrder}>Nombre</option>\r\n//                 <option value=\"rating\">Rating</option>\r\n                \r\n//                 </select>\r\n//         </div>\r\n//     )\r\n// };\r\n\r\nexport default Filter;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAO,aAAa;AACrD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAC3BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;AACzB,CAAC;AACD;;AAEA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAAG,EAAA,GAjEMJ,MAAM;AAmEZ,eAAeA,MAAM;AAAC,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}