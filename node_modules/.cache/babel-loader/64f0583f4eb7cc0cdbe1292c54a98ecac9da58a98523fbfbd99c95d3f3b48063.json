{"ast":null,"code":"import { GET_BY_NAME, GET_ALL_VIDEOGAMES, GET_BY_ID, ADD_GAME, GET_GENRE, FILTER_GENRES } from './ActionsType';\nlet initialState = {\n  allGames: [],\n  name: [],\n  detail: [],\n  copyAllGames: [],\n  allGenres: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_VIDEOGAMES:\n      return {\n        ...state,\n        allGames: action.payload,\n        // el action.payload es la respuesta que me dio la action \"getGames\"\n        copyAllGames: action.payload\n      };\n    case GET_BY_NAME:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_BY_ID:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case ADD_GAME:\n      return {\n        ...state,\n        allGames: action.payload,\n        copyAllGames: action.payload\n      };\n    case GET_GENRE:\n      return {\n        ...state,\n        allGenres: action.payload\n      };\n    // case FILTER_GENRES:\n    //     const genreFilter = state.allGames.filter((game) => game.genres.some((genre) => genre.toLowerCase() === action.payload.toLowerCase())) \n    //     console.log(genreFilter);\n    //     return {\n    //         ...state,\n    //         allGames: genreFilter\n    //     }\n    case FILTER_GENRES:\n      const genreFilter = state.allGames.filter(game => {\n        // Convierte los géneros y el payload a minúsculas para una comparación insensible a mayúsculas/minúsculas\n        const genresInLowercase = game.genres.map(genre => genre.toLowerCase());\n        const payloadInLowercase = action.payload.toLowerCase();\n\n        // Verifica si el payload coincide con al menos uno de los géneros\n        return genresInLowercase.includes(payloadInLowercase);\n      });\n      console.log(genreFilter);\n      return {\n        ...state,\n        allGames: genreFilter\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_BY_NAME","GET_ALL_VIDEOGAMES","GET_BY_ID","ADD_GAME","GET_GENRE","FILTER_GENRES","initialState","allGames","name","detail","copyAllGames","allGenres","rootReducer","state","action","type","payload","genreFilter","filter","game","genresInLowercase","genres","map","genre","toLowerCase","payloadInLowercase","includes","console","log"],"sources":["C:/Users/javie/Desktop/PI-Videogames-main/client/src/Redux/Reducer.js"],"sourcesContent":["import { GET_BY_NAME, GET_ALL_VIDEOGAMES, GET_BY_ID, ADD_GAME, GET_GENRE, FILTER_GENRES } from './ActionsType';\r\n\r\nlet initialState = {allGames: [], name: [], detail:[], copyAllGames: [], allGenres:[]}\r\nconst rootReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_VIDEOGAMES:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload, // el action.payload es la respuesta que me dio la action \"getGames\"\r\n                copyAllGames: action.payload\r\n            };\r\n        \r\n        case GET_BY_NAME:\r\n            \r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            };\r\n            \r\n        case GET_BY_ID:\r\n            return {\r\n                ...state,\r\n                detail: action.payload\r\n            };\r\n        case ADD_GAME:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload,\r\n                copyAllGames: action.payload\r\n            };\r\n        case GET_GENRE:\r\n            return {\r\n                ...state,\r\n                allGenres: action.payload\r\n            };\r\n        // case FILTER_GENRES:\r\n        //     const genreFilter = state.allGames.filter((game) => game.genres.some((genre) => genre.toLowerCase() === action.payload.toLowerCase())) \r\n        //     console.log(genreFilter);\r\n        //     return {\r\n        //         ...state,\r\n        //         allGames: genreFilter\r\n        //     }\r\n        case FILTER_GENRES:\r\n  const genreFilter = state.allGames.filter((game) => {\r\n    // Convierte los géneros y el payload a minúsculas para una comparación insensible a mayúsculas/minúsculas\r\n    const genresInLowercase = game.genres.map((genre) => genre.toLowerCase());\r\n    const payloadInLowercase = action.payload.toLowerCase();\r\n    \r\n    // Verifica si el payload coincide con al menos uno de los géneros\r\n    return genresInLowercase.includes(payloadInLowercase);\r\n  });\r\n\r\n  console.log(genreFilter);\r\n\r\n  return {\r\n    ...state,\r\n    allGames: genreFilter\r\n  };\r\n\r\n    \r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,kBAAkB,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,eAAe;AAE9G,IAAIC,YAAY,GAAG;EAACC,QAAQ,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,MAAM,EAAC,EAAE;EAAEC,YAAY,EAAE,EAAE;EAAEC,SAAS,EAAC;AAAE,CAAC;AACtF,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAEP,YAAY,EAAEQ,MAAM,KAAK;EACjD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKd,kBAAkB;MACnB,OAAO;QACH,GAAGY,KAAK;QACRN,QAAQ,EAAEO,MAAM,CAACE,OAAO;QAAE;QAC1BN,YAAY,EAAEI,MAAM,CAACE;MACzB,CAAC;IAEL,KAAKhB,WAAW;MAEZ,OAAO;QACH,GAAGa,KAAK;QACRN,QAAQ,EAAEO,MAAM,CAACE;MACrB,CAAC;IAEL,KAAKd,SAAS;MACV,OAAO;QACH,GAAGW,KAAK;QACRJ,MAAM,EAAEK,MAAM,CAACE;MACnB,CAAC;IACL,KAAKb,QAAQ;MACT,OAAO;QACH,GAAGU,KAAK;QACRN,QAAQ,EAAEO,MAAM,CAACE,OAAO;QACxBN,YAAY,EAAEI,MAAM,CAACE;MACzB,CAAC;IACL,KAAKZ,SAAS;MACV,OAAO;QACH,GAAGS,KAAK;QACRF,SAAS,EAAEG,MAAM,CAACE;MACtB,CAAC;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA,KAAKX,aAAa;MACxB,MAAMY,WAAW,GAAGJ,KAAK,CAACN,QAAQ,CAACW,MAAM,CAAEC,IAAI,IAAK;QAClD;QACA,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC;QACzE,MAAMC,kBAAkB,GAAGX,MAAM,CAACE,OAAO,CAACQ,WAAW,CAAC,CAAC;;QAEvD;QACA,OAAOJ,iBAAiB,CAACM,QAAQ,CAACD,kBAAkB,CAAC;MACvD,CAAC,CAAC;MAEFE,OAAO,CAACC,GAAG,CAACX,WAAW,CAAC;MAExB,OAAO;QACL,GAAGJ,KAAK;QACRN,QAAQ,EAAEU;MACZ,CAAC;IAGK;MACI,OAAO;QAAC,GAAGJ;MAAK,CAAC;EACzB;AACJ,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}