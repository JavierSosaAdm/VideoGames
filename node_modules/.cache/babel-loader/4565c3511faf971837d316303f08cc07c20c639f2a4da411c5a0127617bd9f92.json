{"ast":null,"code":"const validate = async (form, errors, setErrors) => {\n  if (form.name) {\n    if (/^[a-zA-Z0-9\\s]+$/.test(form.name)) {\n      newErrors = {\n        ...errors,\n        name: ''\n      };\n    } else {\n      newErrors.name = 'Nombre inválido';\n    }\n  }\n  if (form.genres) {\n    if (/^[a-zA-Z0-9\\s]+$/.test(form.platform)) {\n      newErrors = {\n        ...errors,\n        platform: ''\n      };\n    } else {\n      newErrors = {\n        ...errors,\n        platform: '*Plataforma invalida'\n      };\n    }\n    ;\n  }\n  if (form.genres) {\n    if (/^[a-zA-Z0-9\\s]+$/.test(form.genres)) {\n      newErrors = {\n        ...errors,\n        genres: ''\n      };\n    } else {\n      newErrors = {\n        ...errors,\n        genres: '*Elija al menos un género'\n      };\n    }\n    ;\n  }\n  if (form.rating) {\n    if (/^(?:10(?:\\.0{1,2})?|[0-9](?:\\.\\d{1,2})?)$/.test(form.rating)) {\n      newErrors = {\n        ...errors,\n        rating: ''\n      };\n    } else {\n      newErrors = {\n        ...errors,\n        rating: '*Número inválido'\n      };\n    }\n    ;\n  }\n  if (form.image) {\n    if (/\\.(jpg|jpeg|png|gif|bmp)$/i.test(form.image)) {\n      newErrors = {\n        ...errors,\n        image: ''\n      };\n    } else {\n      newErrors = {\n        ...errors,\n        image: '*El link no pertenece a una inagen'\n      };\n    }\n    ;\n  }\n  if (form.updated) {\n    if (/^(0?[1-9]|[12][0-9]|3[01])\\/(0?[1-9]|1[0-2])\\/\\d{4}$/.test(form.updated)) {\n      newErrors = {\n        ...errors,\n        updated: ''\n      };\n    } else {\n      newErrors = {\n        ...errors,\n        updated: '*Fecha inválida'\n      };\n    }\n    ;\n  }\n  if (form.description) {\n    if (/[\\w\\u00C0-\\u017F]+/g.test(form.description)) {\n      newErrors = {\n        ...errors,\n        description: ''\n      };\n    } else {\n      newErrors = {\n        ...errors,\n        description: '*Debes agregar una descripción del juego'\n      };\n    }\n    ;\n  }\n  setErrors(newErrors);\n};","map":{"version":3,"names":["validate","form","errors","setErrors","name","test","newErrors","genres","platform","rating","image","updated","description"],"sources":["C:/Users/javie/Desktop/PI-Videogames-main/client/src/Views/Form/validates.js"],"sourcesContent":["\r\nconst validate = async (form, errors, setErrors) => {    \r\n            \r\n   \r\n\r\n    if (form.name) {\r\n        if (/^[a-zA-Z0-9\\s]+$/.test(form.name)) {\r\n            newErrors = {...errors, name: ''}\r\n        } else {\r\n            newErrors.name = 'Nombre inválido'\r\n        }\r\n    }\r\n          \r\n    if (form.genres) {\r\n        if (/^[a-zA-Z0-9\\s]+$/.test(form.platform)) {\r\n            newErrors = {...errors, platform: ''}\r\n        } else {\r\n            newErrors = {...errors, platform: '*Plataforma invalida'}\r\n        };\r\n    }            \r\n    \r\n    if (form.genres) {\r\n        if (/^[a-zA-Z0-9\\s]+$/.test(form.genres)) {\r\n            newErrors = {...errors, genres: ''}\r\n        } else {\r\n            newErrors = {...errors, genres: '*Elija al menos un género'}\r\n        };\r\n    }\r\n\r\n    if (form.rating) {\r\n        if (/^(?:10(?:\\.0{1,2})?|[0-9](?:\\.\\d{1,2})?)$/.test(form.rating)) {\r\n            newErrors = {...errors, rating: ''}\r\n        } else {\r\n            newErrors = {...errors, rating: '*Número inválido'}\r\n        };\r\n    }   \r\n    \r\n    if (form.image) {\r\n        if (/\\.(jpg|jpeg|png|gif|bmp)$/i.test(form.image)) {\r\n            newErrors = {...errors, image: ''}\r\n        } else {\r\n            newErrors = {...errors, image: '*El link no pertenece a una inagen'}\r\n        };\r\n    }\r\n\r\n    if (form.updated) {\r\n        if (/^(0?[1-9]|[12][0-9]|3[01])\\/(0?[1-9]|1[0-2])\\/\\d{4}$/.test(form.updated)) {\r\n            newErrors = {...errors, updated: ''}\r\n        } else {\r\n            newErrors = {...errors, updated: '*Fecha inválida'}\r\n        };\r\n    }\r\n\r\n    if (form.description) {\r\n        if (/[\\w\\u00C0-\\u017F]+/g.test(form.description)) {\r\n            newErrors = {...errors, description: ''}\r\n        } else {\r\n            newErrors = {...errors, description: '*Debes agregar una descripción del juego'}\r\n        };     \r\n    }   \r\n       \r\n    setErrors(newErrors);    \r\n    \r\n};"],"mappings":"AACA,MAAMA,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAIhD,IAAIF,IAAI,CAACG,IAAI,EAAE;IACX,IAAI,kBAAkB,CAACC,IAAI,CAACJ,IAAI,CAACG,IAAI,CAAC,EAAE;MACpCE,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEE,IAAI,EAAE;MAAE,CAAC;IACrC,CAAC,MAAM;MACHE,SAAS,CAACF,IAAI,GAAG,iBAAiB;IACtC;EACJ;EAEA,IAAIH,IAAI,CAACM,MAAM,EAAE;IACb,IAAI,kBAAkB,CAACF,IAAI,CAACJ,IAAI,CAACO,QAAQ,CAAC,EAAE;MACxCF,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEM,QAAQ,EAAE;MAAE,CAAC;IACzC,CAAC,MAAM;MACHF,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEM,QAAQ,EAAE;MAAsB,CAAC;IAC7D;IAAC;EACL;EAEA,IAAIP,IAAI,CAACM,MAAM,EAAE;IACb,IAAI,kBAAkB,CAACF,IAAI,CAACJ,IAAI,CAACM,MAAM,CAAC,EAAE;MACtCD,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEK,MAAM,EAAE;MAAE,CAAC;IACvC,CAAC,MAAM;MACHD,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEK,MAAM,EAAE;MAA2B,CAAC;IAChE;IAAC;EACL;EAEA,IAAIN,IAAI,CAACQ,MAAM,EAAE;IACb,IAAI,2CAA2C,CAACJ,IAAI,CAACJ,IAAI,CAACQ,MAAM,CAAC,EAAE;MAC/DH,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEO,MAAM,EAAE;MAAE,CAAC;IACvC,CAAC,MAAM;MACHH,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEO,MAAM,EAAE;MAAkB,CAAC;IACvD;IAAC;EACL;EAEA,IAAIR,IAAI,CAACS,KAAK,EAAE;IACZ,IAAI,4BAA4B,CAACL,IAAI,CAACJ,IAAI,CAACS,KAAK,CAAC,EAAE;MAC/CJ,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEQ,KAAK,EAAE;MAAE,CAAC;IACtC,CAAC,MAAM;MACHJ,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEQ,KAAK,EAAE;MAAoC,CAAC;IACxE;IAAC;EACL;EAEA,IAAIT,IAAI,CAACU,OAAO,EAAE;IACd,IAAI,sDAAsD,CAACN,IAAI,CAACJ,IAAI,CAACU,OAAO,CAAC,EAAE;MAC3EL,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAES,OAAO,EAAE;MAAE,CAAC;IACxC,CAAC,MAAM;MACHL,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAES,OAAO,EAAE;MAAiB,CAAC;IACvD;IAAC;EACL;EAEA,IAAIV,IAAI,CAACW,WAAW,EAAE;IAClB,IAAI,qBAAqB,CAACP,IAAI,CAACJ,IAAI,CAACW,WAAW,CAAC,EAAE;MAC9CN,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEU,WAAW,EAAE;MAAE,CAAC;IAC5C,CAAC,MAAM;MACHN,SAAS,GAAG;QAAC,GAAGJ,MAAM;QAAEU,WAAW,EAAE;MAA0C,CAAC;IACpF;IAAC;EACL;EAEAT,SAAS,CAACG,SAAS,CAAC;AAExB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}